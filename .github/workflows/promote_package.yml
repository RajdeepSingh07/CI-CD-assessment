name: Promote Python Package

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: "Package name for promotion"
        required: true
        type: string
      package_version:
        required: true
        type: string

env:
  CLOUDSMITH_NAMESPACE: workspace-for-rajdeep
  CLOUDSMITH_STAGING_REPO: 'ne'
  CLOUDSMITH_PRODUCTION_REPO: 'staging'
  CLOUDSMITH_SERVICE_SLUG: bot-wSY1

permissions:  
   id-token: write # Required for requesting the JWT 
   contents: read  # Required for actions/checkout

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Authenticate with Cloudsmith
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.3
        with:
          oidc-namespace: 'workspace-for-rajdeep'
          oidc-service-slug: 'bot-wSY1'

      - name: Tag Current Package as Ready-for-Production
        run: |
          PACKAGE_NAME="${{ github.event.inputs.package_name }}"
          PACKAGE_VERSION="${{ github.event.inputs.package_version }}"
          
          echo "Tagging package $PACKAGE_NAME-$PACKAGE_VERSION as ready-for-production..."
          
          PACKAGE_QUERY="filename:${PACKAGE_NAME}-${PACKAGE_VERSION}.tar.gz"
          PACKAGE_DATA=$(cloudsmith list package $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_STAGING_REPO -q "$PACKAGE_QUERY" -F json)
          echo "PACKAGE_NAME: $PACKAGE_NAME"
          echo "PACKAGE_VERSION: $PACKAGE_VERSION"
          echo "PACKAGE_QUERY: $PACKAGE_QUERY"
          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[0].identifier_perm')

          if [ -z "$IDENTIFIER" ] || [ "$IDENTIFIER" = "null" ]; then
            echo "Error: Failed to find package identifier."
            exit 1
          fi
          
          echo "Found package identifier: $IDENTIFIER"

          # Add the "ready-for-production" tag
          cloudsmith tag add $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_STAGING_REPO/$IDENTIFIER ready-for-production
          echo "Tagged package $IDENTIFIER as ready-for-production."
        shell: bash

      - name: List All Ready-for-Production Packages
        run: |
          echo "Fetching all packages tagged as ready-for-production..."
          PACKAGE_QUERY="tag:ready-for-production"
          PACKAGE_DATA=$(cloudsmith list package $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_STAGING_REPO -q "$PACKAGE_QUERY" -F json)
          
          IDENTIFIERS=$(echo "$PACKAGE_DATA" | jq -r '.data[].identifier_perm')

          if [ -z "$IDENTIFIERS" ]; then
            echo "No packages found with ready-for-production tag."
            exit 1
          fi

          echo "Found packages for promotion:"
          echo "$IDENTIFIERS"

          # Store identifiers for later use
          echo "IDENTIFIERS=$IDENTIFIERS" >> $GITHUB_ENV
        shell: bash

      - name: Promote All Ready-for-Production Packages
        run: |
          for ID in $IDENTIFIERS; do
            echo "Promoting package $ID to production..."
            cloudsmith mv --yes \
              $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_STAGING_REPO/$ID \
              $CLOUDSMITH_PRODUCTION_REPO
          done
        shell: bash
