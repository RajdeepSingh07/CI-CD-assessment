name: Promote Python Package

on:
  repository_dispatch:
    types: [SYNCED]

env:
  CLOUDSMITH_NAMESPACE: workspace-for-rajdeep
  CLOUDSMITH_STAGING_REPO: 'ne'
  CLOUDSMITH_PRODUCTION_REPO: 'staging'
  CLOUDSMITH_SERVICE_SLUG: bot-wSY1
  PACKAGE_SLUG: ${{ github.event.client_payload.package_slug }}

permissions:  
   id-token: write # Required for requesting the JWT 
   contents: read  # Required for actions/checkout

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Authenticate with Cloudsmith
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.3
        with:
          oidc-namespace: 'workspace-for-rajdeep'
          oidc-service-slug: 'bot-wSY1'

      - name: Tag Current Package as Ready-for-Production
        run: |
          cloudsmith tag add $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_STAGING_REPO/${{ env.PACKAGE_SLUG }} ready-for-production
          echo "Tagged package $PACKAGE_SLUG as ready-for-production."
          
      - name: List All Ready-for-Production Packages
        run: |
          echo "Fetching all packages tagged as ready-for-production..."
          PACKAGE_QUERY="tag:ready-for-production"
          PACKAGE_DATA=$(cloudsmith list package $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_STAGING_REPO -q "$PACKAGE_QUERY" -F json)
          
          IDENTIFIERS=$(echo "$PACKAGE_DATA" | jq -r '.data[].identifier_perm')

          if [ -z "$IDENTIFIERS" ]; then
            echo "No packages found with ready-for-production tag."
            exit 1
          fi

          echo "Found packages for promotion:"
          echo "$IDENTIFIERS"
          for ID in $IDENTIFIERS; do
            echo "Promoting package $ID to production..."
            cloudsmith mv --yes \
              $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_STAGING_REPO/$ID \
              $CLOUDSMITH_PRODUCTION_REPO
          done
        shell: bash
