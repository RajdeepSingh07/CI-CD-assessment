name: Promote Python Package

on:
  workflow_dispatch:
    inputs:
      event_type:
        description: "Event type for package promotion"
        required: true
        type: string

env:
  CLOUDSMITH_NAMESPACE: workspace-for-rajdeep
  CLOUDSMITH_STAGING_REPO: 'ne'
  CLOUDSMITH_PRODUCTION_REPO: 'staging'
  CLOUDSMITH_SERVICE_SLUG: bot-wSY1
  PACKAGE_NAME: 'proj'

permissions:  
   id-token: write # Required for requesting the JWT 
   contents: read  # Required for actions/checkout

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Authenticate with Cloudsmith
        uses: cloudsmith-io/cloudsmith-cli-action@v1.0.3
        with:
          oidc-namespace: 'workspace-for-rajdeep'
          oidc-service-slug: 'bot-wSY1'

      - name: Extract Package Version from Webhook
        run: |
          PACKAGE_VERSION="${{ github.event.client_payload.package_version }}"
          echo "Received package version from webhook: $PACKAGE_VERSION"
          
          if [ -z "$PACKAGE_VERSION" ]; then
            echo "Error: Package version not provided in webhook payload!"
            exit 1
          fi
          
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV
        shell: bash

      - name: Get Package Identifier and Tag as Ready-for-Production
        run: |
          PACKAGE_QUERY="filename:${PACKAGE_NAME}-${PACKAGE_VERSION}.tar.gz"
          echo "Searching for package with query: $PACKAGE_QUERY"
          
          PACKAGE_DATA=$(cloudsmith list package $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_STAGING_REPO -q "$PACKAGE_QUERY" -F json)
          
          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[0].identifier_perm')

          if [ -z "$IDENTIFIER" ] || [ "$IDENTIFIER" = "null" ]; then
            echo "Error: Failed to find package identifier"
            exit 1
          fi
          
          echo "Found package identifier: $IDENTIFIER"

          # Tag package as ready-for-production
          cloudsmith tag set $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_STAGING_REPO/$IDENTIFIER ready-for-production
          echo "Tagged package $IDENTIFIER as ready-for-production."
        shell: bash

      - name: Promote Ready-for-Production Package to Production
        run: |
          # Query for packages tagged as ready-for-production
          PACKAGE_DATA=$(cloudsmith list package $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_STAGING_REPO --tag "ready-for-production" -F json)
          
          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[0].identifier_perm')

          if [ -z "$IDENTIFIER" ] || [ "$IDENTIFIER" = "null" ]; then
            echo "No packages found with ready-for-production tag."
            exit 1
          fi

          echo "Promoting package $IDENTIFIER to production."

          cloudsmith mv --yes \
            $CLOUDSMITH_NAMESPACE/$CLOUDSMITH_STAGING_REPO/$IDENTIFIER \
            $CLOUDSMITH_PRODUCTION_REPO
        shell: bash
